<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingyu.person.mapper.PersonHouseMapper">
    
    <resultMap type="PersonHouse" id="PersonHouseResult">
        <result property="id"    column="id"    />
        <result property="metaAddrId"    column="meta_addr_id"    />
        <result property="communityId"    column="community_id"    />
        <result property="communityCode"    column="community_code"    />
        <result property="communityName"    column="community_name"    />
        <result property="shortName"    column="short_name"    />
        <result property="fullAddress"    column="full_address"    />
        <result property="personId"    column="person_id"    />
        <result property="personType"    column="person_type"    />
        <result property="isImportant"    column="is_important"    />
        <result property="relationshipWithOwner"    column="relationship_with_owner"    />
        <result property="startTime"    column="start_time"    />
    </resultMap>

    <sql id="selectPersonHouseVo">
        select h.id, h.meta_addr_id, h.community_id, s.community_code, s.community_name, s.short_name, s.full_address,
               h.person_id, h.person_type, h.relationship_with_owner, h.start_time, h.is_important
        from sq_person_house h straight_join sq_community_structure s on h.meta_addr_id = s.meta_addr_id
    </sql>

    <select id="selectPersonHouseList" parameterType="PersonHouse" resultMap="PersonHouseResult">
        <include refid="selectPersonHouseVo"/>
        <where>  
            <if test="metaAddrId != null "> and h.meta_addr_id = #{metaAddrId}</if>
            <if test="communityId != null "> and community_id = #{communityId}</if>
            <if test="communityCode != null  and communityCode != ''"> and h.community_code = #{communityCode}</if>
            <if test="personId != null "> and person_id = #{personId}</if>
            <if test="personType != null "> and person_type = #{personType}</if>
            <if test="isImportant != null "> and is_important = #{isImportant}</if>
            <if test="relationshipWithOwner != null "> and relationship_with_owner = #{relationshipWithOwner}</if>
            <if test="startTime != null "> and start_time = #{startTime}</if>
        </where>
        order by start_time desc
    </select>
    
    <select id="selectPersonHouseById" parameterType="Long" resultMap="PersonHouseResult">
        <include refid="selectPersonHouseVo"/>
        where h.id = #{id}
    </select>
    <select id="selectHouseListGroupByMetaAddrId" resultType="com.jingyu.person.domain.HouseAddrVo">
        select
            s.community_code as "communityCode", s.community_name as "communityName",
            s.short_name as "shortName", s.full_address as "fullAddress",
            h.meta_addr_id, h.residents, h.flows, h.importants
        from (
            select meta_addr_id,
            sum(if(person_type = 1, 1, 0)) residents,
            sum(if(person_type = 2, 1, 0)) flows,
            sum(if(is_important = 'Y', 1, 0)) importants
            from sq_person_house s
            <where>
                <if test="communityCode != null and communityCode != ''"> and community_code = #{communityCode}</if>
                <if test="communityId != null and communityId != ''"> and community_id = #{communityId}</if>
                <if test="isImportant!= null and isImportant != ''">and is_important = #{isImportant}</if>
                <if test="metaAddrId != null and metaAddrId != ''"> and meta_addr_id = #{metaAddrId} </if>
            </where>
            group by meta_addr_id
        ) h straight_join sq_community_structure s on h.meta_addr_id = s.meta_addr_id
        order by s.community_name
    </select>
    <select id="personIsImportant" resultType="java.lang.Integer">
        select count(0) from sq_person_house s where s.id = #{id} and is_important = 'Y'
    </select>

    <insert id="insertPersonHouse" parameterType="PersonHouse" useGeneratedKeys="true" keyProperty="id">
        insert into sq_person_house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="metaAddrId != null">meta_addr_id,</if>
            <if test="communityId != null">community_id,</if>
            <if test="communityCode != null">community_code,</if>
            <if test="personId != null">person_id,</if>
            <if test="personType != null">person_type,</if>
            <if test="relationshipWithOwner != null">relationship_with_owner,</if>
            <if test="startTime != null">start_time,</if>
            <if test="isImportant != null">is_important,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="metaAddrId != null">#{metaAddrId},</if>
            <if test="communityId != null">#{communityId},</if>
            <if test="communityCode != null">#{communityCode},</if>
            <if test="personId != null">#{personId},</if>
            <if test="personType != null">#{personType},</if>
            <if test="relationshipWithOwner != null">#{relationshipWithOwner},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="isImportant != null">#{isImportant},</if>
         </trim>
    </insert>

    <update id="updatePersonHouse" parameterType="PersonHouse">
        update sq_person_house
        <trim prefix="SET" suffixOverrides=",">
            <if test="metaAddrId != null">meta_addr_id = #{metaAddrId},</if>
            <if test="communityId != null">community_id = #{communityId},</if>
            <if test="communityCode != null">community_code = #{communityCode},</if>
            <if test="personId != null">person_id = #{personId},</if>
            <if test="personType != null">person_type = #{personType},</if>
            <if test="relationshipWithOwner != null">relationship_with_owner = #{relationshipWithOwner},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="isImportant != null">is_important = #{isImportant},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePersonHouseById" parameterType="Long">
        delete from sq_person_house where id = #{id}
    </delete>

    <delete id="deletePersonHouseByIds" parameterType="String">
        delete from sq_person_house where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteByPersonId">
        delete from sq_person_house where person_id = #{personId} and person_type = #{personType}
    </delete>
</mapper>