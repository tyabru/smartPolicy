<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingyu.qunfangqunzhi.mapper.StatisticsMapper">

    <resultMap type="StatisticsEntity" id="StatisticsEntityResult">
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="realName"    column="real_name"    />
        <result property="userType"    column="user_type"    />
        <result property="times"       column="times"/>
        <result property="deptName"    column="dept_name" />
        <result property="eventType"    column="event_type" />

    </resultMap>

    <select id="countTimesOfGridStuff" resultMap="StatisticsEntityResult" parameterType="StatisticsParams">
        select count(*) as 'times' , a.user_id , b.user_name, c.dept_name,b.user_type,b.real_name
        FROM event_user_allocated a
                 JOIN common_users b
                      on a.user_id = b.user_id
                 JOIN sys_dept c
                      on b.dept_id = c.dept_id
                 join event_info d
                      on a.event_id = d.id
        where a.status = '3' and d.status = '2'
        <if test="params.beginTime!=null and params.beginTime!=''">
            and date(d.finish_time) &gt;= #{params.beginTime}
        </if>

        <if test="params.endTime!=null and params.endTime!=''">
            and date(d.finish_time) &lt;= #{params.endTime}
        </if>
        ${params.dataScope}
        GROUP BY a.user_id,c.dept_name,b.user_name,b.user_type,b.real_name
    </select>

    <select id="countTimesOfGridStuffLeader" resultMap="StatisticsEntityResult" parameterType="StatisticsParams" >
         select count(*) as times,user_id,user_name,dept_name,user_type,real_name from (
         select count(*) as 'times' , a.user_id , b.user_name, c.dept_name,b.user_type,b.real_name,a2.allocate_user_id,d.id
         FROM event_info d
                  JOIN event_user_allocated a
                       on a.event_id = d.id
                  JOIN event_user_allocated a2
                       on a.user_id = a2.allocate_user_id and a.event_id = a2.event_id
                  join common_users b
                       on a.user_id = b.user_id
                  JOIN sys_dept c
                       on b.dept_id = c.dept_id
         where b.user_type = '2' and a2.status = '3' and d.status = '2'
        <if test="params.beginTime!=null and params.beginTime!=''">
            and date(d.finish_time) &gt;= #{params.beginTime}
        </if>

        <if test="params.endTime!=null and params.endTime!=''">
            and date(d.finish_time) &lt;= #{params.endTime}
        </if>
        ${params.dataScope}
         GROUP BY a.user_id,c.dept_name,b.user_name,b.user_type,b.real_name,a2.allocate_user_id,d.id
         ) as first_table
        GROUP BY user_id,user_id,user_name,dept_name,user_type,real_name
    </select>
    <select id="countTimesOfCommunity" resultMap="StatisticsEntityResult" parameterType="StatisticsParams">
        select count(*) as times,dept_name from (
        select count(*) ,a.id,d.dept_name
        from event_info a
                 join event_user_allocated b
                      on a.id = b.event_id
                 join common_users c
                      on b.user_id = c.user_id
                 join sys_dept d
                      on c.dept_id = d.dept_id
        where d.dept_name like '%社区%'  and a.status = '2' and b.status = '3'
        <if test="params.beginTime!=null and params.beginTime!=''">
            and date(a.finish_time) &gt;= #{params.beginTime}
        </if>
        <if test="params.endTime!=null and params.endTime!=''">
            and date(a.finish_time) &lt;= #{params.endTime}
        </if>
        ${params.dataScope}
        GROUP BY d.dept_name,a.id
    ) as first_table
        GROUP BY dept_name

    </select>

    <select id="countTimesOfPeople" resultMap="StatisticsEntityResult" parameterType="StatisticsParams">
        SELECT count(*) as times,user_name,real_name from event_info a
        join common_users b
        on a.upload_user_id = b.user_id
        where a.status = '2'
        <if test="params.beginTime!=null and params.beginTime!=''">
            and date(a.finish_time) &gt;= #{params.beginTime}
        </if>
        <if test="params.endTime!=null and params.endTime!=''">
            and date(a.finish_time) &lt;= #{params.endTime}
        </if>
        ${params.dataScope}
        GROUP BY user_name,real_name
    </select>


    <select id="countNumberOfUnconfirmedEvents" resultMap="StatisticsEntityResult" parameterType="StatisticsParams">
        select count(*) as times,event_type
        from event_info a
        where
            a.status = 0
            ${params.dataScope}
        GROUP BY event_type
        order by event_type asc
    </select>





</mapper>
